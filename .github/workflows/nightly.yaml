name: Nightly
# Long running tests, Performance benchmarks, Code vulnerability, Code coverage etc
on:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches: [chore/run-benches]

concurrency:
  group: nightly
  cancel-in-progress: true

jobs:
  # Run coverage on nightly
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install minimal stable with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v1

      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: "0"
          RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - id: coverage
        uses: actions-rs/grcov@v0.1

      - uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: |
            ${{ steps.coverage.outputs.report }}
          retention-days: 10
      - name: Coveralls upload
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{ steps.coverage.outputs.report }}
      - name: Post to a Slack channel
        id: slack
        continue-on-error: true
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: "release-notifications"
          slack-message: |
            ```
            Coverage: ${{ job.status }}

            Last Commit: ${{ github.event.pull_request.html_url || github.event.head_commit.url }}

            Response: ${{ coveralls-api-result }}
            ```
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  # Run benches on stable
  bench:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install minimal stable with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy

      - name: Install Protoc
        uses: arduino/setup-protoc@v1

      - name: âš¡ Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/.package-cache
            ~/.cargo/registry/
            ~/.cargo/git/db/
            target/release
          key: ${{ runner.os }}-cargo-release-bench-
          restore-keys: |
            ${{ runner.os }}-cargo-release-bench-
            ${{ runner.os }}-cargo-release-

      - name: Install Criterion
        continue-on-error: true
        run: cargo install cargo-criterion

      - id: bench
        name: Run Bench
        continue-on-error: true
        run: cargo criterion

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - uses: keithweaver/aws-s3-github-action@v1.0.0
        continue-on-error: true
        with:
          command: sync
          source: ./target/criterion
          destination: s3://getdozer/bench-test-result/${{ steps.date.outputs.date }}/criterion
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID_FOR_S3 }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_FOR_S3 }}
          aws_region: ap-southeast-1

      - name: Post to a Slack channel
        id: slack
        continue-on-error: true
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: "release-notifications"
          slack-message: |
            ```
            Criterion: ${{ job.status }}

            Last Commit: ${{ github.event.pull_request.html_url || github.event.head_commit.url }}

            Criterion Report: https://getdozer.s3.ap-southeast-1.amazonaws.com/bench-test-result/${{ steps.date.outputs.date }}/criterion/report/index.html
            ```
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
