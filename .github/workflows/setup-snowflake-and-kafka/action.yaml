name: Setup snowflake and kafka (debezium)

inputs:
  GITHUB_TOKEN:
    description: GITHUB token
    required: true
  SNOWFLAKE_SERVER:
    description: SNOWFLAKE_SERVER
    required: true
    default: ''
  SNOWFLAKE_USERNAME:
    description: SNOWFLAKE_USERNAME
    required: true
    default: ''
  SNOWFLAKE_PASSWORD:
    description: SNOWFLAKE_PASSWORD
    required: true
    default: SNOWFLAKE_PASSWORD
  SNOWFLAKE_DATABASE:
    description: SNOWFLAKE_DATABASE
    required: true
    default: SNOWFLAKE_DATABASE
  SNOWFLAKE_SCHEMA:
    description: SNOWFLAKE_SCHEMA
    required: true
    default: SNOWFLAKE_SCHEMA
  SNOWFLAKE_WAREHOUSE:
    description: SNOWFLAKE_WAREHOUSE
    required: true
    default: SNOWFLAKE_WAREHOUSE
  DEBEZIUM_TABLE_NAME:
    description: DEBEZIUM_TABLE_NAME
    required: true
    default: DEBEZIUM_TABLE_NAME
  DEBEZIUM_KAFKA_BROKER:
    description: DEBEZIUM_KAFKA_BROKER
    required: true
    default: DEBEZIUM_KAFKA_BROKER
  DEBEZIUM_KAFKA_TOPIC:
    description: DEBEZIUM_KAFKA_TOPIC
    required: true
    default: DEBEZIUM_KAFKA_TOPIC
  POSTGRES_USER:
    description: POSTGRES_USER
    required: true
    default: POSTGRES_USER
  POSTGRES_PASSWORD:
    description: POSTGRES_PASSWORD
    required: true
    default: POSTGRES_PASSWORD
  POSTGRES_HOST:
    description: POSTGRES_HOST
    required: true
    default: POSTGRES_HOST
  POSTGRES_PORT:
    description: POSTGRES_PORT
    required: true
    default: POSTGRES_PORT
  POSTGRES_DATABASE:
    description: POSTGRES_DATABASE
    required: true
    default: POSTGRES_DATABASE
  KAFKA_CONNECTOR_URL:
    description: KAFKA_CONNECTOR_URL
    required: true
    default: KAFKA_CONNECTOR_URL
  POSTGRES_SCHEMA:
    description: POSTGRES_SCHEMA
    required: true
    default: POSTGRES_SCHEMA

runs:
  using: "composite"
  steps:
    - name: Install Snowflake ODBC driver
      shell: bash
      run: curl ${SNOWFLAKE_DRIVER_URL} -o snowflake_driver.deb && sudo dpkg -i snowflake_driver.deb
      env:
        SNOWFLAKE_DRIVER_URL: https://sfc-repo.snowflakecomputing.com/odbc/linux/2.25.7/snowflake-odbc-2.25.7.x86_64.deb

    - uses: franzbischoff/replace_envs@v1
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        SERVER: ${{ inputs.SNOWFLAKE_SERVER }}
        USERNAME: ${{ inputs.SNOWFLAKE_USERNAME }}
        PASSWORD: ${{ inputs.SNOWFLAKE_PASSWORD }}
        DATABASE: ${{ inputs.SNOWFLAKE_DATABASE }}
        SCHEMA: ${{ inputs.SNOWFLAKE_SCHEMA }}
        WAREHOUSE: ${{ inputs.SNOWFLAKE_WAREHOUSE }}
      with:
        from_file: "config/tests/test.snowflake.yaml"
        to_file: "config/tests/local/test.snowflake.yaml"
        commit: "false"

    - uses: franzbischoff/replace_envs@v1
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        DEBEZIUM_TABLE_NAME: ${{ inputs.DEBEZIUM_TABLE_NAME }}
        DEBEZIUM_KAFKA_BROKER: ${{ inputs.DEBEZIUM_KAFKA_BROKER }}
        DEBEZIUM_KAFKA_TOPIC: ${{ inputs.DEBEZIUM_KAFKA_TOPIC }}
        POSTGRES_USER: ${{ inputs.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ inputs.POSTGRES_PASSWORD }}
        POSTGRES_HOST: ${{ inputs.POSTGRES_HOST }}
        POSTGRES_PORT: ${{ inputs.POSTGRES_PORT }}
        POSTGRES_DATABASE: ${{ inputs.POSTGRES_DATABASE }}
        KAFKA_CONNECTOR_URL: ${{ inputs.KAFKA_CONNECTOR_URL }}
      with:
        from_file: "config/tests/test.debezium.yaml"
        to_file: "config/tests/local/test.debezium.yaml"
        commit: "false"

    - uses: franzbischoff/replace_envs@v1
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        DEBEZIUM_TABLE_NAME: ${{ inputs.DEBEZIUM_TABLE_NAME }}
        DEBEZIUM_KAFKA_TOPIC: ${{ inputs.DEBEZIUM_KAFKA_TOPIC }}
        POSTGRES_USER: ${{ inputs.POSTGRES_USER }}
        POSTGRES_HOST: ${{ inputs.POSTGRES_HOST }}
        POSTGRES_PORT: ${{ inputs.POSTGRES_PORT }}
        POSTGRES_DATABASE: ${{ inputs.POSTGRES_DATABASE }}
        POSTGRES_SCHEMA: ${{ inputs.POSTGRES_SCHEMA }}
        POSTGRES_PASSWORD: ${{ inputs.POSTGRES_PASSWORD }}
      with:
        from_file: "config/tests/test.register-postgres.json"
        to_file: "config/tests/local/test.register-postgres.json"
        commit: "false"

    - uses: franzbischoff/replace_envs@v1
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        POSTGRES_USER: ${{ inputs.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ inputs.POSTGRES_PASSWORD }}
        POSTGRES_HOST: ${{ inputs.POSTGRES_HOST }}
        POSTGRES_PORT: ${{ inputs.POSTGRES_PORT }}
        POSTGRES_DATABASE: ${{ inputs.POSTGRES_DATABASE }}
      with:
        from_file: "config/tests/test.postgres.auth.yaml"
        to_file: "config/tests/local/test.postgres.auth.yaml"
        commit: "false"

    - uses: franzbischoff/replace_envs@v1
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        POSTGRES_USER: ${{ inputs.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ inputs.POSTGRES_PASSWORD }}
        POSTGRES_HOST: ${{ inputs.POSTGRES_HOST }}
        POSTGRES_PORT: ${{ inputs.POSTGRES_PORT }}
        POSTGRES_DATABASE: ${{ inputs.POSTGRES_DATABASE }}
      with:
        from_file: "config/tests/test.postgres.yaml"
        to_file: "config/tests/local/test.postgres.yaml"
        commit: "false"