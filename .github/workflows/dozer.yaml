name: Dozer CI

on:
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check for println!()
        run: (! grep -R -a -n --include "*.rs" --exclude-dir target "println\!" *)

      - name: Install minimal stable with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: MongoDB in GitHub Actions
        uses: supercharge/mongodb-github-action@1.8.0

      - uses: ./.github/workflows/setup-snowflake-and-kafka
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SNOWFLAKE_SERVER: ${{ secrets.SNOWFLAKE_SERVER }}
          SNOWFLAKE_USERNAME: ${{ secrets.SNOWFLAKE_USERNAME }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          DEBEZIUM_TABLE_NAME: ${{ secrets.DEBEZIUM_TABLE_NAME }}
          DEBEZIUM_KAFKA_BROKER: ${{ secrets.DEBEZIUM_KAFKA_BROKER }}
          DEBEZIUM_KAFKA_WITH_REGISTRY_BROKER: ${{ secrets.DEBEZIUM_KAFKA_WITH_REGISTRY_BROKER }}
          DEBEZIUM_KAFKA_SCHEMA_REGISTRY_URL: ${{ secrets.DEBEZIUM_KAFKA_SCHEMA_REGISTRY_URL }}
          DEBEZIUM_KAFKA_TOPIC: ${{ secrets.DEBEZIUM_KAFKA_TOPIC }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
          KAFKA_CONNECTOR_URL: ${{ secrets.KAFKA_CONNECTOR_URL }}
          POSTGRES_SCHEMA: ${{ secrets.POSTGRES_SCHEMA }}

      - name: âš¡ Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/.package-cache
            ~/.cargo/registry/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
            ${{ runner.os }}-cargo-

      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features -- -D warnings

      - name: Lint
        run: |
          cargo fmt -- --check

      - name: Run tests
        run: cargo test --verbose --features mongodb
