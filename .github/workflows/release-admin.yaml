name: Release Admin
on:
  push:
    branches: [release-admin, release-admin-dev, fix/release-admin]
    tags:
      - "va*.*.*"
env:
  CARGO_TERM_COLOR: always
  BUCKET_NAME: "dozer-releases"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write # This is required for requesting the JWT
  contents: write # This is required for actions/checkout

jobs:
  # https://github.com/orhun/git-cliff/blob/main/.github/workflows/cd.yml
  prepare:
    name: Prepare
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    outputs:
      release_body: ${{ steps.release.outputs.release_body }}
      version: ${{ steps.version.outputs.version }}
      prerelease: ${{ steps.version.outputs.prerelease }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Generate a changelog
        uses: orhun/git-cliff-action@v1
        id: git-cliff
        with:
          config: .github/config/cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md

      - name: Set the release body
        id: release
        shell: bash
        run: |
          r=$(cat ${{ steps.git-cliff.outputs.changelog }})
          r="$(printf "$r" | tail -n +3)"
          r="${r//'%'/'%25'}"
          r="${r//$'\n'/'%0A'}"
          r="${r//$'\r'/'%0D'}"
          echo "::set-output name=release_body::$r"

      - name: Set release version
        id: version
        run: |
          tag=$(printf "%q" ${{ github.ref_name }})

          if [[ $tag =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "::set-output name=version::$tag"
            echo "::set-output name=prerelease::false"
          else
            echo "::set-output name=version::latest"
            echo "::set-output name=prerelease::true"
          fi
  release:
    name: Release
    runs-on: ${{ matrix.os }}
    needs: prepare
    timeout-minutes: 60
    strategy:
      matrix:
        os: [ubuntu-20.04]
        include:
          - os: ubuntu-20.04
            file_name: dozer-admin
            asset_name: dozer-admin-linux-amd64
    steps:
      - uses: actions/checkout@v3
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: rust-cargo-make
        uses: davidB/rust-cargo-make@v1

      - name: âš¡ Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/.package-cache
            ~/.cargo/registry/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-release-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-release-${{ hashFiles('Cargo.lock') }}
            ${{ runner.os }}-cargo-release-

      - name: pull ui package
        uses: keithweaver/aws-s3-github-action@v1.0.0
        with:
          command: cp
          source: s3://dozer-releases/ui/latest.tar.gz
          destination: /release/ui
          aws_access_key_id: AKIA2JYZFEFYMPGPJHOS
          aws_secret_access_key: 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
          aws_region: ap-southeast-1
      - name: Prepare build package
        run: cargo build -p dozer-admin --release
      - name: Prepare release assets
        shell: bash
        run: |
          cp target/release/${{matrix.file_name}} release/
          cp {LICENSE,README.md,CHANGELOG.md} release/ 2> /dev/null || echo "Copy Failed...Ignoring.."

          tar -czvf ${{matrix.asset_name}}-${{ needs.prepare.outputs.version }}.tar.gz \
              release/
      - uses: hkusu/s3-upload-action@v2
        with:
          aws-access-key-id: AKIA2JYZFEFYMPGPJHOS
          aws-secret-access-key: 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
          aws-bucket: dozer-releases/dozer-admin
          file-path: ${{matrix.asset_name}}-${{ needs.prepare.outputs.version }}.tar.gz
          aws-region: ap-southeast-1
          destination-dir: /
          bucket-root: /
      
