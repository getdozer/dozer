syntax = "proto3";
package dozer.api;

service Dozer {
  rpc GetDocument(GetDocumentRequest) returns (DocumentResponse);
  rpc GetDocuments(GetDocumentsRequest) returns (DocumentsResponse);
  rpc QueryDocuments(QueryDocumentsRequest) returns (DocumentsResponse);
  rpc PutDocument(DocumentRequest) returns (DozerResponse);
  rpc DeleteDocument(DocumentRequest) returns (DozerResponse);
}

// Requests
message DocumentRequest {
  string _id = 1;
  string index = 2;
}

message QueryOptions {
  optional uint32 offset = 1;
  optional uint32 limit = 2;
}

message SortOptions {
  uint32 offset = 1;
  optional uint32 limit = 2;
}

message FilterExpression { string expression = 1; }

message GetDocumentRequest {
  DocumentRequest request = 1;
  string tenant_id = 2;
}

message GetDocumentsRequest {
  repeated DocumentRequest requests = 1;
  string tenant_id = 3;
}

message QueryDocumentsRequest {
  optional QueryOptions query_options = 1;
  optional SortOptions sort_options = 2;
  oneof filter {
    string search = 3;
    FilterExpression expression = 4;
  }
}

// Responses
message DocumentResponse {
  string _id = 1;
  string index = 2;
  bytes body = 3;
}

message DocumentsResponse { repeated DocumentResponse documents = 1; }

message DozerResponse {
  bool success = 1;
  string message = 2;
}
