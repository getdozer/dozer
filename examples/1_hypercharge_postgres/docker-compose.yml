version: '3.9'
services:
  
  dozer:
    container_name: dozer
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres
    build: ../
    ports:
      # REST APIs are published on port 8080
      - "8080:8080"
      # gRPC are available over 50051
      - "50051:50051"
    volumes:
      - ./dozer-config.yaml:/usr/dozer/dozer-config.yaml
      - ./.dozer:/usr/dozer/.dozer
    command: "-c /usr/dozer/dozer-config.yaml"
    networks: ["dozer_net"]

  # Initialize sample data
  samples:
    build:
      context: .
      dockerfile: samples.Dockerfile
    volumes:
      - sample-data:/var/lib/stock-sample/data
    networks: ["dozer_net"]

  postgres:
    depends_on:
      - samples
    container_name: 1-hypercharge-postgres
    image: debezium/postgres:13
    volumes:
      - sample-data:/var/lib/stock-sample/data
      - ./pg_hba.conf:/var/lib/stock-sample/pg_hba.conf
      - ./init_stocks.sql:/docker-entrypoint-initdb.d/init_stocks.sql
    command: postgres -c hba_file=/var/lib/stock-sample/pg_hba.conf
    environment:
      POSTGRES_DB: stocks
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      ALLOW_IP_RANGE: 0.0.0.0/0
    ports:
      - '5434:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -h 0.0.0.0 -d stocks" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks: ["dozer_net"]

networks:
  dozer_net:
    enable_ipv6: true
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "true"
    ipam:
      driver: default
      config:
        - subnet: fd00:0:0:1::/64
          gateway: fd00:0:0:1::1

volumes:
  sample-data: