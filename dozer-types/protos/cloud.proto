syntax = "proto3";
package dozer.cloud;
import "cloud_types.proto";
import "cloud_notification.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service DozerCloud {
  
  rpc validate_connection(ConnectionRequest)
      returns (ValidateConnectionResponse);
  rpc create_connection(ConnectionRequest) returns (ConnectionResponse);
  rpc get_connection(GetConnectionRequest) returns (ConnectionResponse);
  rpc list_connections(GetAllConnectionRequest)
      returns (GetAllConnectionResponse);
  rpc get_tables(GetTablesRequest) returns (GetTablesResponse);
  rpc update_connection(UpdateConnectionRequest) returns (ConnectionResponse);

  rpc list_applications(ListAppRequest) returns (ListAppResponse);

  // Application
  rpc create_application(CreateAppRequest) returns (AppResponse);
  rpc deploy_application(DeployAppRequest) returns (DeployAppResponse);
  rpc update_application(UpdateAppRequest) returns (AppResponse);
  rpc delete_application(DeleteAppRequest) returns (DeleteAppResponse);
  rpc get_application(GetAppRequest) returns (AppResponse);  
  rpc stop_dozer(StopRequest) returns (StopResponse);
  rpc get_status(GetStatusRequest) returns (GetStatusResponse);
  rpc list_deployments(ListDeploymentRequest) returns (ListDeploymentResponse);
  rpc list_versions(ListVersionsRequest) returns (ListVersionsResponse);  
  rpc upsert_version(UpsertVersionRequest) returns (UpsertVersionResponse);
  rpc set_current_version(SetCurrentVersionRequest) returns (SetCurrentVersionResponse);
  rpc list_files(ListFilesRequest) returns (ListFilesResponse);

  // returns a list of all the steps for a deployment
  rpc get_deployment_status(GetDeploymentStatusRequest) returns (GetDeploymentStatusResponse);

  rpc create_secret(CreateSecretRequest) returns (CreateSecretResponse);
  rpc update_secret(UpdateSecretRequest) returns (UpdateSecretResponse);
  rpc delete_secret(DeleteSecretRequest) returns (DeleteSecretResponse);
  rpc get_secret(GetSecretRequest) returns (GetSecretResponse);
  rpc list_secrets(ListSecretsRequest) returns (ListSecretsResponse);

  rpc OnLogMessage(LogMessageRequest) returns (stream LogMessage);
  rpc OnStatusUpdate(StatusUpdateRequest) returns (stream StatusUpdate);

  rpc get_resources(GetResourcesRequest) returns (ResourcesResponse);

  rpc Subscribe(google.protobuf.Empty) returns (stream Notification);

  rpc list_notifications(ListNotificationsRequest) returns (ListNotificationsResponse);
}

service DozerPublic {
  rpc company_metadata(CompanyRequest) returns (CompanyResponse);
}
message ListNotificationsRequest {
  string app_id = 1;
  optional uint32 limit = 2;
  optional uint32 offset = 3;
}

message ListNotificationsResponse {
  repeated Notification notifications = 1;
  Pagination pagination = 2;
}
message CreateAppRequest {
  repeated File files = 3;
}
message DeployAppRequest {
  optional string app_id = 1;
  repeated File files = 2;
  repeated Secret secrets = 3;
  bool allow_incompatible = 4;
}

message DeployAppResponse {
  string app_id = 1;
  string deployment_id = 2;
  string deployment_url = 3;
}

message AppResponse {
  string app_id = 1;
  AppConfig app = 2;
  repeated DeploymentInfo deployments = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message ListAppRequest {
  optional uint32 limit = 1;
  optional uint32 offset = 2;
  optional string name = 3;
  optional string uuid = 4;
  optional string order_by = 5;
  optional bool desc = 6;
}
message ListAppResponse {
  repeated AppResponse apps = 1;
  Pagination pagination = 2;
}

message UpdateAppRequest {
  string app_id = 1;
  repeated File files = 2;
}

message DeleteAppRequest {
  string app_id = 1;
}
message DeleteAppResponse { bool success = 1; }

message GetAppRequest { optional string app_id = 1; }

message GetStatusRequest{
  string app_id = 1;
}
message GetStatusResponse {
  string data_endpoint = 1;
  repeated DeploymentStatusWithHealth deployments = 2;
  map<uint32, uint32> versions = 4;
  optional uint32 current_version = 5;
}
message DeploymentStatusWithHealth {
  DeploymentInfo deployment = 1;
  repeated DeploymentResource resources = 2;
}

message GetResourcesRequest {
  string app_id = 1;
  // if not specified, will get latest version
  optional uint32 version = 2;
}
message ResourcesResponse {
  repeated DeploymentResource resources = 1;
}

message DeploymentResource {
  string name = 1;
  // api, app
  string typ = 2;
  string created_at = 3;
  
  optional int32 desired = 4;

  optional int32 available = 5;
  //  Running but not ready
  optional int32 unavailable = 6;
}

message StopRequest { string app_id = 1; }
message StopResponse { bool success = 1; }

enum DeploymentStatus {
  PENDING = 0;
  RUNNING = 1;
  SUCCESS = 2;
  FAILED = 3;
}

message ListVersionsRequest { string app_id = 1; }
message ListVersionsResponse {
  optional uint32 current_version = 4;
  map<uint32, uint32> versions = 3;
}

message DeploymentInfo {
  string deployment_id = 1;
  uint32 deployment = 2;
  DeploymentStatus status = 3;
  optional google.protobuf.Timestamp created_at = 4;
  optional google.protobuf.Timestamp updated_at = 5;
}

message GetDeploymentStatusRequest {
  string app_id = 1;
  string deployment_id = 2;
}
message GetDeploymentStatusResponse {
  DeploymentStatus status = 1;
  repeated DeploymentStep steps = 2;
  optional google.protobuf.Timestamp created_at = 5;
  optional google.protobuf.Timestamp updated_at = 6;
}

message DeploymentStep {
  uint32 step_index = 1;
  string step_text = 2;
  DeploymentStatus status = 3;
  string logs = 4;
}

message ListDeploymentRequest {
  string app_id = 1;
}

message ListDeploymentResponse {
  repeated DeploymentInfo deployments = 2;
}

message UpsertVersionRequest {
  string app_id = 1;
  uint32 version = 2;
  uint32 deployment = 3;
}

message UpsertVersionResponse {}

message SetCurrentVersionRequest {
  string app_id = 1;
  uint32 version = 2;
}

message SetCurrentVersionResponse {}

message ConnectionRequest { Connection connection = 1; }
message GetConnectionRequest {
  string connection_id = 1;
}
message ValidateConnectionResponse { bool success = 1; }
message ConnectionResponse {
  string id = 1;
  Connection connection = 2;
  string yaml_content = 3;
}

message GetTablesRequest { string connection_id = 2; }

message GetTablesResponse {
  string connection_id = 1;
  repeated TableInfo tables = 2;
}

message GetAllConnectionRequest {
  optional uint32 limit = 2;
  optional uint32 offset = 3;
}
message GetAllConnectionResponse {
  repeated ConnectionResponse connections = 1;
  Pagination pagination = 2;
}
message UpdateConnectionRequest {
  Connection connection = 1;
  string connection_id = 3;
}
message ListFilesRequest {
  string app_id = 1;
}
message ListFilesResponse {
  repeated FileInfo files = 1;
}
message FileInfo {
  string id = 1;
  File file = 2;
}

message LogMessageRequest {
  string app_id = 1;
  uint32 deployment = 2;
  bool follow = 3;
  bool include_build = 4;
  bool include_app = 5;
  bool include_api = 6;
}
message StatusUpdateRequest {
  string app_id = 1;
}
message Pagination {
  uint32 limit = 1;
  uint32 offset = 2;
  uint32 total = 3;
}

message ErrorResponse { string message = 1; }


message CompanyRequest {
  oneof criteria {
    string iss = 1;
    string slug = 2;
  }
}
message CompanyResponse {
  string name = 1;
  string auth_url = 2;
  string iss = 3;
  string jwks_url = 4;
  string slug = 5;
}

message Secret {
  string name = 1;
  string value = 2;
}

message CreateSecretRequest {
  string app_id = 1;
  string name = 2;
  string value = 3;
}

message CreateSecretResponse {
}

message UpdateSecretRequest {
  string app_id = 1;
  string name = 2;
  string value = 3;
}

message UpdateSecretResponse {
}

message DeleteSecretRequest {
  string app_id = 1;
  string name = 2;
}

message DeleteSecretResponse {
}

message GetSecretRequest {
  string app_id = 1;
  string name = 2;
}

message GetSecretResponse {
  string name = 1;
}

message ListSecretsRequest {
  string app_id = 1;
}

message ListSecretsResponse {
  repeated string secrets = 1;
}