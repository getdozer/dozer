syntax = "proto3";

package dozer.contract;

import "types.proto";

service ContractService {
  rpc Sources(SourcesRequest) returns (dozer.types.SchemasResponse);
  rpc Endpoints(CommonRequest) returns (dozer.types.SchemasResponse);
  rpc GenerateDot(CommonRequest) returns (DotResponse);
  rpc GetGraphSchemas(CommonRequest) returns (dozer.types.SchemasResponse);
}

message CloudVersionId {
  string app_id = 1;
  uint32 version = 2;
}

message SourcesRequest {
  // Only used in cloud context.
  optional CloudVersionId cloud_id = 1;
  string connection_name = 2;
}
  
message CommonRequest {
  // Only used in cloud context.
  optional CloudVersionId cloud_id = 1;
}

message DotResponse {
  string dot = 1;
}

message ProtoResponse {
  repeated string protos = 1;
  repeated string libraries = 2;
}