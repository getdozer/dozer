[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true

[tasks.admin-release]
run_task = { name = ["ui-release", "grpc-release", "build-orchestrator-release"], parallel = true }


[tasks.admin-local]
run_task = { name = ["ui-local","grpc-local", "build-orchestrator-release"], parallel = true }

#================== START DOZER UI ==================

[tasks.ui-release]
dependencies = [
    "checkout-ui",
    "build-ui",
    "copy-build-ui"
]

[tasks.ui-local]
dependencies = [
    "checkout-ui-local",
    "run-ui-local"
]

[tasks.checkout-ui]
script_runner = "@shell"
script = '''
rm -rf ./dozer-ui
git clone https://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@github.com/getdozer/dozer-ui.git ./dozer-ui
cd dozer-ui
git checkout develop
echo "REACT_APP_GRPC_ADMIN_URL=http://localhost:8081" > .env
yarn install
'''

[tasks.checkout-ui-local]
script_runner = "@shell"
script = '''
rm -rf ./dozer-ui
gh repo clone getdozer/dozer-ui ./dozer-ui
cd dozer-ui
git checkout develop
echo "REACT_APP_GRPC_ADMIN_URL=http://localhost:8081" > .env
yarn install
'''

[tasks.build-ui]
script_runner = "@shell"
script = '''
cd dozer-ui
echo "REACT_APP_GRPC_ADMIN_URL=http://localhost:8081" > .env
yarn install
CI=""
yarn build
'''

[tasks.run-ui-local]
script_runner = "@shell"
script = '''
cd dozer-ui
echo "REACT_APP_GRPC_ADMIN_URL=http://localhost:8081" > .env
yarn install
yarn start &
'''

[tasks.copy-build-ui]
script_runner = "@shell"
script = '''
rm -rf ./target/release/ui
cp -r dozer-ui/build target/release/ui
rm -rf ./dozer-ui
'''

[tasks.clean-up-ui]
script_runner = "@shell"
script = '''
rm -rf ./dozer-ui
'''
#================== END DOZER UI ==================


#================== START DOZER ADMIN GRPC ==================
[tasks.grpc-release]
dependencies = [
    "build-admin-release",
    "create-admin-config-release"
]
[tasks.grpc-local]
dependencies = [
    "reset-admin-db",
    "create-admin-config",
    "build-admin-debug",
    "run-admin-debug"
]

[tasks.reset-admin-db]
script_runner = "@shell"
script = '''
rm -rf ./dozer-admin/dozer.db && cd dozer-admin && diesel setup && diesel migration run
cd ..
'''

[tasks.create-admin-config]
script_runner = "@shell"
script = '''
cp config/samples/dozer-admin-config.sample.yaml ./dozer-admin-config.yaml
echo 'dozer_path: target/release/dozer' >> ./dozer-admin-config.yaml
'''

[tasks.create-admin-config-release]
script_runner = "@shell"
script = '''
cp config/samples/dozer-admin-config.sample.yaml target/release/dozer-admin-config.yaml
'''

[tasks.build-admin-release]
command = "cargo"
args = ["build", "-p", "dozer-admin", "--release", "--bin", "dozer-admin"]

[tasks.build-admin-debug]
command = "cargo"
args = ["build", "-p", "dozer-admin", "--bin", "dozer-admin"]

[tasks.run-admin-debug]
command = "cargo"
args = ["run", "-p", "dozer-admin"]


[tasks.start-dozer-admin]
script_runner = "@shell"
script = '''
target/release/dozer-admin -c target/release/dozer-admin-config.yaml  &
'''


#================== END DOZER ADMIN GRPC ==================

#================== START DOZER CLI ==================
[tasks.build-orchestrator-release]
command = "cargo"
args = ["build", "-p", "dozer-orchestrator", "--release", "--bin", "dozer"]


[tasks.build-orchestrator-debug]
command = "cargo"
args = ["build", "-p", "dozer-orchestrator", "--bin", "dozer"]


#================== END DOZER CLI ==================
