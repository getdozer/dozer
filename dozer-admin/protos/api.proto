syntax = "proto3";
package dozer_admin_grpc;
import "protos/connection/connection_info.proto";
import "protos/connection/details.proto";
import "protos/source/source_info.proto";
import "protos/endpoint/endpoint_info.proto";

service DozerAdmin {
  rpc test_connection(TestConnectionRequest) returns (TestConnectionResponse);
  rpc create_connection(CreateConnectionRequest) returns (CreateConnectionResponse);
  rpc get_connection_details(GetConnectionDetailsRequest) returns (GetConnectionDetailsResponse);
  rpc get_all_connections(GetAllConnectionRequest) returns (GetAllConnectionResponse);
  rpc get_schema(GetSchemaRequest) returns (GetSchemaResponse);
  rpc update_connection(UpdateConnectionRequest) returns (UpdateConnectionResponse);
  
  rpc create_source(CreateSourceRequest) returns (CreateSourceResponse);
  rpc get_source(GetSourceRequest) returns (GetSourceResponse);
  rpc update_source(UpdateSourceRequest) returns (UpdateSourceResponse);

  rpc create_endpoint(CreateEndpointRequest) returns (CreateEndpointResponse);
  rpc get_endpoint(GetEndpointRequest) returns (GetEndpointResponse);
  rpc update_endpoint(UpdateEndpointRequest) returns (UpdateEndpointResponse);
}

message CreateEndpointRequest {
  EndpointInfo info = 1;
}

message CreateEndpointResponse {
  EndpointInfo info = 1;
}

message GetEndpointRequest {
  string endpoint_id = 1;
}
message GetEndpointResponse {
  EndpointInfo info = 1;
}

message UpdateEndpointRequest {
  EndpointInfo info = 1;
}

message UpdateEndpointResponse {
  EndpointInfo info = 1;
}

message TestConnectionRequest {
  ConnectionInfo info = 1;
}

message TestConnectionResponse {
  bool success = 1;
}

message ErrorResponse {
  string message = 1;
}

message CreateConnectionRequest {
  ConnectionInfo info = 1;
}
message CreateConnectionResponse {
  ConnectionInfo info = 1;
}

message GetSchemaRequest {
  string connection_id = 1;
}

message GetSchemaResponse {
  string connection_id = 1;
  ConnectionDetails details = 2;
}

message GetConnectionDetailsRequest {
  string connection_id = 1;
}
message GetConnectionDetailsResponse {
  ConnectionInfo info = 1;
  ConnectionDetails details = 2;
}

message GetAllConnectionRequest {
  uint64 page = 1;
  uint64 page_size = 2;
}

message UpdateConnectionRequest {
  ConnectionInfo info = 1;
}
message UpdateConnectionResponse {
  ConnectionInfo info = 1;
}

message UpdateSourceRequest {
  SourceInfo info = 1;
}
message UpdateSourceResponse {
  SourceInfo info = 1;
  string id = 2;
}
message GetAllConnectionResponse {
  repeated ConnectionInfo data = 1;
  Pagination pagination = 2;
}

message Pagination {
  uint64 limit = 1;
  uint64 page = 2;
  uint64 page_size = 3;
  uint64 total_records = 4;
  uint64 total_pages = 5;
}

message CreateSourceRequest {
  SourceInfo info = 1;
}
message CreateSourceResponse {
  SourceInfo info = 1;
}

message GetSourceRequest {
  string id = 1;
}

message GetSourceResponse {
  SourceInfo info = 1;
  string id = 2;
}