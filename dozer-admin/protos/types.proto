syntax = "proto3";
package dozer_admin_grpc;

message App {
  string id = 1;
  string name = 2;
  string config = 3;
  string created_at = 4;
  string updated_at = 5;
}

message Connection {
  oneof authentication {
    PostgresAuthentication Postgres = 1;
    EthereumAuthentication Ethereum = 2;
    EventsAuthentication Events = 3;
    SnowflakeAuthentication Snowflake = 4;
    KafkaAuthentication Kafka = 5;
  }
  string id = 6;
  string app_id = 7;
  DBType db_type = 8;
  string name = 9;
}

enum DBType {
  Postgres = 0;
  Snowflake = 1;
  Ethereum = 2;
  Events = 3;
  Kafka = 4;
}

message Authentication {
  oneof authentication {
    PostgresAuthentication Postgres = 1;
    EthereumAuthentication Ethereum = 2;
    EventsAuthentication Events = 3;
    SnowflakeAuthentication Snowflake = 4;
    KafkaAuthentication Kafka = 5;
  }
}

message SnowflakeAuthentication {
  string server = 1;
  string port = 2;
  string user = 3;
  string password = 4;
  string database = 5;
  string schema = 6;
  string warehouse = 7;
  optional string driver = 8;
}
message PostgresAuthentication {
  string user = 1;
  string password = 2;
  string host = 3;
  uint32 port = 4;
  string database = 5;
}
message KafkaAuthentication {
  string broker = 1;
  string topic = 2;
  optional string schema_registry_url = 3;
}
message EventsAuthentication { string database = 1; }

message EthereumAuthentication {
  EthereumFilter filter = 1;
  string wss_url = 2;
  string name = 3;
  repeated EthContract contracts = 4;
}

message EthereumFilter {
  optional uint64 from_block = 1;
  repeated string addresses = 2;
  repeated string topics = 3;
}
message EthContract {
  string name = 1;
  string address = 2;
  string abi = 3;
}

message TableInfo {
  string table_name = 1;
  repeated ColumnInfo columns = 2;
}
message ColumnInfo {
  string column_name = 1;
  bool is_nullable = 2;
  string udt_name = 3;
  bool is_primary_key = 4;
}