syntax = "proto3";
package dozer_admin_grpc;
import "protos/types.proto";

service DozerAdmin {
  rpc create_application(CreateAppRequest) returns (AppResponse);
  rpc list_applications(ListAppRequest) returns (ListAppResponse);
  rpc update_application(UpdateAppRequest) returns (AppResponse);
  rpc get_application(GetAppRequest) returns (AppResponse);
  rpc validate_connection(ValidateConnectionRequest)
      returns (ValidateConnectionResponse);
  rpc create_connection(CreateConnectionRequest) returns (ConnectionResponse);
  rpc list_connections(GetAllConnectionRequest)
      returns (GetAllConnectionResponse);
  rpc get_schema(GetSchemaRequest) returns (GetSchemaResponse);
  rpc update_connection(UpdateConnectionRequest) returns (ConnectionResponse);

  rpc start_pipeline(StartPipelineRequest) returns (StartPipelineResponse);
}

message StartPipelineRequest { string app_id = 1; }
message StartPipelineResponse { bool success = 1; }
message CreateAppRequest { string config = 2; }

message AppResponse {
  string id = 1;
  AppConfig app = 2;
}

message ListAppRequest {
  optional uint32 limit = 1;
  optional uint32 offset = 2;
}
message ListAppResponse {
  repeated AppResponse apps = 1;
  Pagination pagination = 2;
}

message UpdateAppRequest {
  string id = 1;
  string config = 3;
}

message GetAppRequest { optional string app_id = 1; }

message ValidateConnectionRequest {
  Authentication authentication = 1;
  string name = 2;
  DBType type = 3;
}
message ValidateConnectionResponse { bool success = 1; }
message CreateConnectionRequest {
  Authentication authentication = 1;
  string name = 3;
  DBType type = 4;
}

message ConnectionResponse {
  string id = 1;
  Connection connection = 2;
}

message GetSchemaRequest { string connection_id = 2; }

message GetSchemaResponse {
  string connection_id = 1;
  repeated TableInfo tables = 2;
}

message GetAllConnectionRequest {
  optional uint32 limit = 2;
  optional uint32 offset = 3;
}
message GetAllConnectionResponse {
  repeated ConnectionResponse connections = 1;
  Pagination pagination = 2;
}
message UpdateConnectionRequest {
  Authentication authentication = 1;
  string connection_id = 3;
  string name = 4;
  DBType type = 5;
}

message Pagination {
  uint32 limit = 1;
  uint32 offset = 2;
  uint32 total = 3;
}

message ErrorResponse { string message = 1; }
