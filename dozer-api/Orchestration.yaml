openapi: 3.0.1
info:
  title: Orchestration
  description: Orchestration api
  version: '1.0'
  contact:
    name: Dozer-Team
    email: api@getdozer.io
    url: 'https://getdozer.io'
tags:
  - name: orchestration
servers:
  - url: 'http://localhost:3000'
paths:
  '/sources/{id}':
    get:
      summary: ''
      operationId: get-sources
      responses:
        '200':
          $ref: '#/components/responses/Sources'
      parameters: []
      description: ''
      requestBody:
        $ref: '#/components/requestBodies/Source'
    parameters:
      - $ref: '#/components/parameters/id'
    post:
      summary: ''
      operationId: post-sources-id
      responses:
        '200':
          $ref: '#/components/responses/Sources'
      requestBody:
        $ref: '#/components/requestBodies/Source'
    delete:
      summary: ''
      operationId: delete-sources-id
      responses:
        '200':
          $ref: '#/components/responses/Delete'
  /sources:
    get:
      summary: ''
      operationId: get-paginated-sources
      responses:
        '200':
          $ref: '#/components/responses/SourcesArray'
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      description: ''
      requestBody:
        $ref: '#/components/requestBodies/Source'
    parameters: []
    put:
      summary: ''
      operationId: put-sources
      responses:
        '200':
          $ref: '#/components/responses/Sources'
      requestBody:
        $ref: '#/components/requestBodies/Source'
  /connections/test:
    post:
      summary: ''
      operationId: post-sources-test-connection
      responses:
        '200':
          $ref: '#/components/responses/ConnectionTest'
      description: ''
      requestBody:
        $ref: '#/components/requestBodies/ConnectionTest'
    parameters: []
  /connections:
    post:
      summary: ''
      operationId: post-connections
      requestBody:
        $ref: '#/components/requestBodies/Connection'
      responses:
        '200':
          $ref: '#/components/responses/Connection'
components:
  schemas:
    ConnectionDetails:
      title: ConnectionDetails
      type: object
      properties:
        database:
          type: string
        user:
          type: string
        host:
          type: string
        name:
          type: string
      required:
        - database
        - user
    ConnectionAuthentication:
      allOf:
        - $ref: '#/components/schemas/ConnectionDetails'
        - type: object
          properties:
            password:
              type: string
          required:
            - password
    ErrorResponse:
      title: ErrorResponse
      x-stoplight:
        id: 4z0t4alqeuwzm
      type: object
      properties:
        error_code:
          type: string
        message:
          type: string
        details:
          type: string
      required:
        - error_code
        - message
    TestConnection:
      title: TestConnection
      x-stoplight:
        id: faxroxfap1axv
      type: object
      properties:
        db_version:
          type: string
        schema:
          type: string
        tables:
          type: array
          items:
            type: string
        views:
          type: array
          items:
            type: string
        type:
          $ref: '#/components/schemas/ConnectionType'
    ConnectionType:
      type: string
      title: ConnectionType
      x-stoplight:
        id: yad8zg2rhqu7c
      enum:
        - postgres
        - snowflake
        - databricks
    Connection:
      title: Connection
      x-stoplight:
        id: zggzx1lnelwet
      type: object
      properties:
        id:
          type: number
        auth:
          $ref: '#/components/schemas/ConnectionDetails'
        type:
          $ref: '#/components/schemas/ConnectionType'
    SourceSetting:
      title: SourceSetting
      x-stoplight:
        id: jw1f7fbirbb0e
      type: object
      properties:
        name:
          type: string
        table_name:
          type: string
        connection_id:
          type: number
        connection_table_name:
          type: string
        data_layout:
          $ref: '#/components/schemas/SourceDataLayout'
        refresh_options:
          $ref: '#/components/schemas/RefreshOptions'
      required:
        - name
        - table_name
        - connection_id
        - connection_table_name
        - data_layout
        - refresh_options
      x-examples:
        example-1:
          name: string
          table_name: string
          connection_id: 0
          connection_table_name: string
          data_layout:
            source_data_type: master
            options:
              master_source_option_type: append_only
              unique_key_field: string
              open_date_field: string
              closed_date_field: string
          refresh_options:
            period: every_hour
            after_minute: 0
    SourceDataLayout:
      title: SourceDataLayout
      oneOf:
        - $ref: '#/components/schemas/MasterSourceDataLayout'
        - $ref: '#/components/schemas/TransactionalSourceDataLayout'
    MasterSourceDataLayout:
      type: object
      properties:
        source_data_type:
          type: string
          enum:
            - master
        options:
          $ref: '#/components/schemas/MasterOptions'
      required:
        - source_data_type
        - options
      x-examples:
        example-1:
          source_data_type: master
          options:
            master_source_option_type: append_only
            unique_key_field: string
            open_date_field: string
            closed_date_field: string
    MasterOptions:
      title: MasterOptions
      oneOf:
        - $ref: '#/components/schemas/MasterAppendOnlyOptions'
        - $ref: '#/components/schemas/MasterOverwriteOptions'
    MasterAppendOnlyOptions:
      title: MasterAppendOnlyOptions
      x-stoplight:
        id: wu4vkccsckw2u
      type: object
      properties:
        master_source_option_type:
          type: string
          enum:
            - append_only
        unique_key_field:
          type: string
        open_date_field:
          type: string
        closed_date_field:
          type: string
      required:
        - master_source_option_type
        - unique_key_field
        - open_date_field
        - closed_date_field
    MasterOverwriteOptions:
      title: MasterOverwriteOptions
      type: object
      properties:
        master_source_option_type:
          type: string
          enum:
            - overwrite
        override:
          type: string
      required:
        - master_source_option_type
    TransactionalSourceDataLayout:
      type: object
      properties:
        source_data_type:
          type: string
          enum:
            - transactional
        options:
          $ref: '#/components/schemas/TransactionalOption'
      required:
        - source_data_type
        - options
    TransactionalOption:
      title: TransactionalOption
      oneOf:
        - $ref: '#/components/schemas/TransactionalRetainPartialHistoryOptions'
        - $ref: '#/components/schemas/TransactionalRetainFullHistoryOptions'
    TransactionalRetainPartialHistoryOptions:
      type: object
      properties:
        transactional_source_option_type:
          type: string
          enum:
            - retain_partial_history
        timestamp_field:
          type: string
        retention_period:
          type: number
          description: Period in hours
      required:
        - transactional_source_option_type
        - timestamp_field
        - retention_period
    TransactionalRetainFullHistoryOptions:
      type: object
      properties:
        transactional_source_option_type:
          type: string
          enum:
            - retain_full_history
      required:
        - transactional_source_option_type
    RefreshOptions:
      title: RefreshOptions
      x-stoplight:
        id: yil92gdf1jaje
      type: object
      properties:
        period:
          type: string
          enum:
            - every_hour
            - every_day
            - every_week
        after_minute:
          type: number
      required:
        - period
  securitySchemes: {}
  responses:
    ConnectionTest:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
          examples:
            example-1:
              value:
                id: string
        application/xml:
          schema:
            type: object
            properties: {}
    Sources:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/SourceSetting'
    Delete:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
    SourcesArray:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/SourceSetting'
    Connection:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Connection'
  requestBodies:
    Source:
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/SourceSetting'
    ConnectionTest:
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                  authentication:
                    $ref: '#/components/schemas/ConnectionAuthentication'
        application/xml:
          schema:
            type: object
            properties: {}
    Connection:
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                  auth:
                    $ref: '#/components/schemas/ConnectionAuthentication'
  parameters:
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: number
        default: 100
      allowEmptyValue: true
    offset:
      name: offset
      in: query
      required: false
      schema:
        type: number
    id:
      name: id
      in: path
      required: true
      schema:
        type: number
