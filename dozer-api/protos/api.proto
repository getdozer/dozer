syntax = "proto3";
package dozer_api_grpc;
import "google/protobuf/struct.proto";

service DozerApi {
  rpc test_connection(TestConnectionRequest) returns (TestConnectionResponse);
  rpc create_connection(CreateConnectionRequest) returns (CreateConnectionResponse);
  rpc get_connection_details(GetConnectionDetailsRequest) returns (GetConnectionDetailsResponse);
  rpc get_all_connections(GetAllConnectionRequest) returns (GetAllConnectionResponse);
  rpc get_schema(GetSchemaRequest) returns (GetSchemaResponse);
}
enum ConnectionType {
  postgres = 0;
  snowflake = 1;
  databricks = 2;
}

message TestConnectionRequest {
  ConnectionType type = 1;
  oneof authentication {
    PostgresAuthentication postgres = 2;
  }
}

message TestConnectionResponse {
  bool success = 1;
}

message PostgresAuthentication {
  string database = 1;
  string user = 2;
  string host = 3;
  string port = 4;
  string name = 5;
  string password = 6;
}

message ErrorResponse {
  string message = 1;
  google.protobuf.Value details = 2;
}

message CreateConnectionRequest {
  ConnectionType type = 1;
  oneof authentication {
    PostgresAuthentication postgres = 2;
  }
}
message CreateConnectionResponse {
  ConnectionInfo info = 1;
}

message ConnectionDetails {
  repeated TableInfo table_info = 1;
}

message TableInfo {
  string table_name = 1;
  repeated ColumnInfo columns = 2;
}
message ColumnInfo {
  string column_name = 1;
  bool is_nullable = 2;
  string udt_name = 3;
  bool is_primary_key = 4;
}

message GetSchemaRequest {
  string connection_id = 1;
}

message GetSchemaResponse {
  string connection_id = 1;
  ConnectionDetails details = 2;
}

message GetConnectionDetailsRequest {
  string connection_id = 1;
}
message GetConnectionDetailsResponse {
  ConnectionInfo info = 1;
  ConnectionDetails details = 2;
}

message GetAllConnectionRequest {
  uint64 page = 1;
  uint64 page_size = 2;
}

message ConnectionInfo {
  string id = 1;
  ConnectionType type = 2;
  oneof authentication {
    PostgresAuthentication postgres = 3;
  }
}

message GetAllConnectionResponse {
  repeated ConnectionInfo data = 1;
  Pagination pagination = 2;
}

message Pagination {
  uint64 limit = 1;
  uint64 page = 2;
  uint64 page_size = 3;
  uint64 total_records = 4;
  uint64 total_pages = 5;
}