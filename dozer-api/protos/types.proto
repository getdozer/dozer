syntax = "proto3";

package dozer.types;

enum EventType {
  ALL = 0;
  INSERT_ONLY = 1;
  UPDATE_ONLY = 2;
  DELETE_ONLY = 3;
}

enum OperationType {
  INSERT = 0;
  DELETE = 1;
  UPDATE = 2;
}

message Operation {
  OperationType typ = 1;
  optional Record old = 2;
  Record new = 3;
  string endpoint_name = 4;
}
message Record { repeated Value values = 1; }

enum Type {
  UInt = 0;
  Int = 1;
  Float = 2;
  Boolean = 3;
  String = 4;
  Text = 5;   // convert as string
  Binary = 6; // convert as bytes
  Decimal = 7;
  Timestamp = 8;
  Date = 9;
  Bson = 10;
}
message SchemaEvent {
  string endpoint = 1;
  uint64 version = 2;
  repeated int32 primary_index = 3;
  repeated FieldDefinition fields = 4;
}

message FieldDefinition {
  Type typ = 1;
  string name = 2;
  bool nullable = 3;
}
message Value {
  oneof value {
    uint64 uint_value = 2;
    int64 int_value = 3;
    float float_value = 4;
    bool bool_value = 5;
    string string_value = 6;
    bytes bytes_value = 7;
    ArrayValue array_value = 8;
    double double_value = 9;
  };
}

message ArrayValue { repeated Value array_value = 2; }