openapi: 3.0.0
info:
  title: FILM
  description: API documentation for film
  contact:
    name: Dozer-Team
    url: https://getdozer.io
    email: api@getdozer.io
  version: 1.0.0
servers:
- url: http://localhost:8080
paths:
  /films:
    get:
      tags:
      - films
      summary: summary
      description: some description
      operationId: list-film
      responses:
        '200':
          description: A page array of film
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/films'
  /films/{id}:
    get:
      tags:
      - films
      summary: summary
      description: some description
      operationId: film-by-id
      parameters:
      - in: path
        name: id
        description: Id of film to fetch
        required: true
        schema:
          type: integer
        style: simple
      responses:
        '200':
          description: Get by id film
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/film'
  /films/query:
    post:
      tags:
      - films
      summary: summary
      description: some description
      operationId: query-film
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filter-expression'
        required: true
      responses:
        '200':
          description: A page array of film
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/films'
components:
  schemas:
    film:
      description: A representation of film
      type: object
      properties:
        film_id:
          type: string
        description:
          type: string
        rental_rate:
          type: string
        release_year:
          type: string
    films:
      description: Array of film
      type: array
      items:
        $ref: '#/components/schemas/film'
    scalar-value:
      oneOf:
      - type: string
      - type: boolean
      - type: integer
    comparision-expression:
      oneOf:
      - type: object
        properties:
          $eq:
            $ref: '#/components/schemas/scalar-value'
        required:
        - $eq
      - type: object
        properties:
          $lt:
            $ref: '#/components/schemas/scalar-value'
        required:
        - $lt
      - type: object
        properties:
          $lte:
            $ref: '#/components/schemas/scalar-value'
        required:
        - $lte
      - type: object
        properties:
          $gt:
            $ref: '#/components/schemas/scalar-value'
        required:
        - $gt
      - type: object
        properties:
          $gte:
            $ref: '#/components/schemas/scalar-value'
        required:
        - $gte
      - type: object
        properties:
          $contains:
            $ref: '#/components/schemas/scalar-value'
        required:
        - $contains
      - type: object
        properties:
          $matchesany:
            $ref: '#/components/schemas/scalar-value'
        required:
        - $matchesany
      - type: object
        properties:
          $matchesall:
            $ref: '#/components/schemas/scalar-value'
        required:
        - $matchesall
    simple-expression:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/comparision-expression'
    and-expression:
      type: object
      properties:
        $and:
          $ref: '#/components/schemas/filter-expression'
      required:
      - $and
    filter-expression:
      oneOf:
      - $ref: '#/components/schemas/simple-expression'
      - $ref: '#/components/schemas/and-expression'
tags:
- name: films
