control sortmode rowsort

statement ok
CREATE TABLE Users (
    id integer NOT NULL,
    Name text NOT NULL,
    City text,
    Country text,
    Salary numeric NOT NULL
)

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (1, 'John Smith', 'New York', 'USA', 50000);

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (2, 'Jane Doe', 'Los Angeles', 'USA', 60000);

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (3, 'Mike Johnson', 'Chicago', 'USA', 55000);

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (4, 'Karen Davis', 'Dallas', 'USA', 45000);

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (5, 'David Lee', 'Houston', 'USA', 65000);

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (6, 'Sarah Johnson', 'Miami', 'USA', 75000);

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (7, 'Tom Smith', 'Toronto', 'Canada', 80000);

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (8, 'Emily Davis', 'Seattle', 'USA', 55000);

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (9, 'Kevin Kim', 'Vancouver', 'Canada', 60000);

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (10, 'Maria Rodriguez', 'Mexico City', 'Mexico', 70000);

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (11, 'Hiroshi Yamamoto', 'Tokyo', 'Japan', 75000);

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (12, 'Anna Nguyen', 'Sydney', 'Australia', 65000);

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (13, 'Lee Min Ho', 'Seoul', 'South Korea', 85000);

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (14, 'Isabella Martinez', 'Madrid', 'Spain', 60000);

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (15, 'Luca Rossi', 'Rome', 'Italy', 50000);

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (16, 'Sophie Dupont', 'Paris', 'France', 70000);

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (17, 'Miguel Hernandez', 'Barcelona', 'Spain', 75000);

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (18, 'Emma Smith', 'London', 'UK', 80000);

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (19, 'Sven Gustavsson', 'Stockholm', 'Sweden', 65000);

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (20, 'Leila Ahmed', 'Cairo', 'Egypt', 55000);

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (21, 'Javier Torres', 'Buenos Aires', 'Argentina', 60000);

statement ok
INSERT INTO Users (id, Name, City, Country, Salary) VALUES (22, 'Hans Muller', 'Berlin', 'Germany', 70000);

statement ok
UPDATE Users SET Salary = 60000 WHERE id = 2;

statement ok
UPDATE Users SET City = 'San Francisco' WHERE id = 4;

statement ok
UPDATE Users SET Salary = 80000 WHERE id = 7;

statement ok
UPDATE Users SET Country = 'Canada', Salary = 70000 WHERE id = 10;

statement ok
UPDATE Users SET Salary = 90000 WHERE id = 13;

statement ok
DELETE FROM Users WHERE id = 1;

statement ok
DELETE FROM Users WHERE id = 3;

statement ok
DELETE FROM Users WHERE id = 6;

statement ok
DELETE FROM Users WHERE id = 9;

statement ok
DELETE FROM Users WHERE id = 11;

statement ok
DELETE FROM Users WHERE id = 12;

statement ok
DELETE FROM Users WHERE id = 15;

statement ok
DELETE FROM Users WHERE id = 17;

statement ok
DELETE FROM Users WHERE id = 19;

statement ok
DELETE FROM Users WHERE id = 21;


query TR
SELECT Country, AVG(Salary) FROM Users GROUP BY Country;

query TI
SELECT Country, COUNT(Salary) FROM Users GROUP BY Country;

query TI
SELECT Country, COUNT(Salary) FROM Users WHERE Salary >= 20000 GROUP BY Country;

query TR
SELECT Country, SUM(Salary) FROM Users HAVING SUM(Salary) > 50000 AND SUM(Salary) < 400;

query TR
SELECT Country, MAX(Salary) FROM Users GROUP BY Country;

query TR
SELECT Country, MIN(Salary) FROM Users WHERE Salary >= 1 GROUP BY Country;

query TR
SELECT Country, (MIN(Salary) + MAX(Salary))/2 as a FROM Users WHERE Salary >= 10000 GROUP BY Country;

query TI
SELECT City, COUNT(Country) FROM Users GROUP BY City, Country;

query TT
SELECT City, 'AVG:', AVG(Salary) FROM Users GROUP BY City; 

# SELECT CONCAT(City,'/',Country), CONCAT('Total: ', CAST(AVG(Salary) AS STRING)) FROM Users GROUP BY CONCAT(City,'/',Country);
 