# actor
statement ok
CREATE TABLE actor(
    actor_id integer NOT NULL,
    first_name text NOT NULL,
    last_name text,
    last_update text
)

# film
statement ok
CREATE TABLE film (
    film_id integer NOT NULL,
    title text NOT NULL,
    description text,
    release_year text,
    language_id integer NOT NULL,
    original_language_id integer,
    rental_duration integer  NOT NULL,
    rental_rate numeric NOT NULL,
    length integer,
    replacement_cost numeric NOT NULL,
    rating TEXT,
    last_update timestamp NOT NULL,
    special_features text
)

# film_actor
statement ok
CREATE TABLE film_actor (
    actor_id integer NOT NULL,
    film_id integer NOT NULL,
    last_update timestamp NOT NULL
);

# insert data to actor
statement ok
INSERT INTO actor(actor_id,first_name, last_name, last_update) VALUES (1, 'penelope', 'guiness', '2020-02-15 09:34:33+00');

statement ok
INSERT INTO actor(actor_id,first_name, last_name, last_update) VALUES (1, 'penelope', 'guiness', '2020-02-15 09:34:33+00');

statement ok
INSERT INTO actor(actor_id,first_name, last_name, last_update) VALUES (2, 'jack', 'nicholson', '2020-03-01 10:00:00+00');

statement ok
INSERT INTO actor(actor_id,first_name, last_name, last_update) VALUES (3, 'angelina', 'jolie', '2020-03-10 11:11:11+00');

statement ok
INSERT INTO actor(actor_id,first_name, last_name, last_update) VALUES (4, 'tom', 'hanks', '2020-03-15 14:44:44+00');

statement ok
INSERT INTO actor(actor_id,first_name, last_name, last_update) VALUES (5, 'brad', 'pitt', '2020-03-20 17:17:17+00');

statement ok
INSERT INTO actor(actor_id,first_name, last_name, last_update) VALUES (6, 'jennifer', 'aniston', '2020-03-25 20:20:20+00');

statement ok
INSERT INTO actor(actor_id,first_name, last_name, last_update) VALUES (7, 'robert', 'downey jr.', '2020-03-30 23:23:23+00');

statement ok
INSERT INTO actor(actor_id,first_name, last_name, last_update) VALUES (8, 'scarlett', 'johansson', '2020-04-05 02:02:02+00');

statement ok
INSERT INTO actor(actor_id,first_name, last_name, last_update) VALUES (9, 'meryl', 'streep', '2020-04-10 05:05:05+00');

statement ok
INSERT INTO actor(actor_id,first_name, last_name, last_update) VALUES (10, 'leonardo', 'dicaprio', '2020-04-15 08:08:08+00');


#insert data to film

statement ok
INSERT INTO film (film_id, title, description, release_year, language_id, original_language_id, rental_duration, rental_rate, length, replacement_cost, rating, last_update, special_features)
VALUES (1, 'The Shawshank Redemption', 'Two imprisoned men bond over a number of years, finding solace and eventual redemption through acts of common decency.', '1994', 1, NULL, 2, 2.99, 142, 19.99, 'R', '2022-03-16 00:00:00', 'Deleted Scenes;Behind the Scenes');

statement ok
INSERT INTO film (film_id, title, description, release_year, language_id, original_language_id, rental_duration, rental_rate, length, replacement_cost, rating, last_update, special_features)
VALUES (2, 'The Godfather', 'The aging patriarch of an organized crime dynasty transfers control of his clandestine empire to his reluctant son.', '1972', 1, NULL, 3, 2.99, 175, 24.99, 'R', '2022-03-16 00:00:00', 'Deleted Scenes;Behind the Scenes');


statement ok
INSERT INTO film (film_id, title, description, release_year, language_id, original_language_id, rental_duration, rental_rate, length, replacement_cost, rating, last_update, special_features)
VALUES (3, 'The Dark Knight', 'When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, Batman must accept one of the greatest psychological and physical tests of his ability to fight injustice.', '2008', 1, NULL, 5, 3.99, 152, 29.99, 'PG-13', '2022-03-16 00:00:00', 'Deleted Scenes;Behind the Scenes');


statement ok
INSERT INTO film (film_id, title, description, release_year, language_id, original_language_id, rental_duration, rental_rate, length, replacement_cost, rating, last_update, special_features)
VALUES (4, 'Schindler''s List', 'In German-occupied Poland during World War II, Oskar Schindler gradually becomes concerned for his Jewish workforce after witnessing their persecution by the Nazi Germans.', '1993', 1, NULL, 5, 3.99, 195, 24.99, 'R', '2022-03-16 00:00:00', 'Deleted Scenes;Behind the Scenes');


statement ok
INSERT INTO film (film_id, title, description, release_year, language_id, original_language_id, rental_duration, rental_rate, length, replacement_cost, rating, last_update, special_features)
VALUES (5, 'The Godfather: Part II', 'The early life and career of Vito Corleone in 1920s New York City is portrayed, while his son, Michael, expands and tightens his grip on the family crime syndicate.', '1974', 1, NULL, 202, 2.99, 202, 18.99, 'R', '2023-03-15 10:00:00', 'Deleted Scenes,Behind the Scenes');


statement ok
INSERT INTO film (film_id, title, description, release_year, language_id, original_language_id, rental_duration, rental_rate, length, replacement_cost, rating, last_update, special_features)
VALUES (6, 'My Fair Lady', 'A misogynistic and snobbish phonetics professor agrees to a wager that he can take a flower girl and make her presentable in high society.', '1964', 1, NULL, 7, 4.99, 170, 19.99, 'G', '2022-03-16 00:00:00', 'Trailers');

statement ok
INSERT INTO film (film_id, title, description, release_year, language_id, original_language_id, rental_duration, rental_rate, length, replacement_cost, rating, last_update, special_features)
VALUES (7, 'Vertigo', 'A retired San Francisco detective suffering from acrophobia investigates the strange activities of an old friend''s wife, all the while becoming dangerously obsessed with her.', '1958', 1, NULL, 7, 4.99, 128, 19.99, 'PG', '2022-03-16 00:00:00', 'Commentaries');


statement ok
INSERT INTO film (film_id, title, description, release_year, language_id, original_language_id, rental_duration, rental_rate, length, replacement_cost, rating, last_update, special_features)
VALUES (8, 'When Harry Met Sally', 'Harry and Sally have known each other for years, and are very good friends, but they fear sex would ruin the friendship.', '1989', 1, NULL, 7, 4.99, 96, 19.99, 'R', '2022-03-16 00:00:00', 'Deleted Scenes');


statement ok
INSERT INTO film (film_id, title, description, release_year, language_id, original_language_id, rental_duration, rental_rate, length, replacement_cost, rating, last_update, special_features)
VALUES (9, 'The Artist', 'A silent movie star meets a young dancer, but the arrival of talking pictures sends their careers in opposite directions.', '2011', 1, NULL, 7, 4.99, 100, 19.99, 'PG-13', '2022-03-16 00:00:00', 'Behind the Scenes');

statement ok
INSERT INTO film (film_id, title, description, release_year, language_id, original_language_id, rental_duration, rental_rate, length, replacement_cost, rating, last_update, special_features)
VALUES (10, 'The Great Gatsby', 'A writer and wall street trader, Nick, finds himself drawn to the past and lifestyle of his millionaire neighbor, Jay Gatsby.', '2013', 1, NULL, 7, 4.99, 143, 19.99, 'PG-13', '2022-03-16 00:00:00', 'Trailers');


# insert data to film_actor
statement ok
INSERT INTO film_actor (actor_id, film_id, last_update) VALUES (1, 1, '2022-03-16 10:00:00');

statement ok
INSERT INTO film_actor (actor_id, film_id, last_update) VALUES (1, 2, '2022-03-16 10:00:00');

statement ok
INSERT INTO film_actor (actor_id, film_id, last_update) VALUES (1, 3, '2022-03-16 10:00:00');

statement ok
INSERT INTO film_actor (actor_id, film_id, last_update) VALUES (2, 4, '2022-03-16 10:00:00');

statement ok
INSERT INTO film_actor (actor_id, film_id, last_update) VALUES (2, 5, '2022-03-16 10:00:00');

statement ok
INSERT INTO film_actor (actor_id, film_id, last_update) VALUES (2, 6, '2022-03-16 10:00:00');

statement ok
INSERT INTO film_actor (actor_id, film_id, last_update) VALUES (3, 7, '2022-03-16 10:00:00');

statement ok
INSERT INTO film_actor (actor_id, film_id, last_update) VALUES (3, 8, '2022-03-16 10:00:00');

statement ok
INSERT INTO film_actor (actor_id, film_id, last_update) VALUES (3, 9, '2022-03-16 10:00:00');

statement ok
INSERT INTO film_actor (actor_id, film_id, last_update) VALUES (4, 10, '2022-03-16 10:00:00');


query IR rowsort
SELECT COUNT(DISTINCT fa.actor_id) AS total_actors, AVG(f.length) AS avg_length
FROM film_actor fa
INNER JOIN film f ON fa.film_id = f.film_id
WHERE f.rating = 'PG';
----
1 128

onlyif bug
query TT rowsort
SELECT a.first_name, a.last_name
FROM actor a
INNER JOIN (
  SELECT actor_id
  FROM film_actor
  GROUP BY actor_id
  HAVING COUNT(actor_id) >= 10
) fa ON a.actor_id = fa.actor_id
----

query I rowsort
SELECT COUNT(DISTINCT fa.actor_id) AS num_actors
FROM film_actor fa
INNER JOIN film f ON fa.film_id = f.film_id
WHERE f.release_year <= '2005' AND f.rating = 'G';
----
1

query TT rowsort
SELECT a.first_name, a.last_name
FROM actor a
INNER JOIN film_actor fa ON a.actor_id = fa.actor_id
INNER JOIN film f ON fa.film_id = f.film_id
WHERE f.title LIKE '%Redemption%'
----
penelope guiness
penelope guiness

query TTI rowsort
SELECT a.first_name, a.last_name, COUNT(fa.film_id) as num_films
FROM actor a
INNER JOIN film_actor fa ON a.actor_id = fa.actor_id
GROUP BY a.actor_id
----
angelina jolie 3
jack nicholson 3
penelope guiness 6
tom hanks 1


query TTI rowsort
SELECT a.first_name, a.last_name, SUM(f.length) as total_length
FROM actor a
INNER JOIN film_actor fa ON a.actor_id = fa.actor_id
INNER JOIN film f ON fa.film_id = f.film_id
GROUP BY a.actor_id
----
angelina jolie 324
jack nicholson 567
penelope guiness 938
tom hanks 143

query TTI rowsort
SELECT actor.first_name, actor.last_name, COUNT(film_actor.film_id) AS total_films
FROM actor
INNER JOIN film_actor ON actor.actor_id = film_actor.actor_id
GROUP BY actor.actor_id
HAVING COUNT(film_actor.film_id) > 50;
----

onlyif bug
query TTT rowsort
SELECT film.title, film.release_year, film.rating
FROM film
INNER JOIN film_actor ON film.film_id = film_actor.film_id
WHERE film.release_year > 2000 AND film.rating = 'PG-13';
----
the artist 2011 pg-13
the dark knight 2008 pg-13
the great gatsby 2013 pg-13


query ITTI rowsort
SELECT a.actor_id, a.first_name, a.last_name, COUNT(fa.film_id) AS num_films
FROM actor a
INNER JOIN film_actor fa ON a.actor_id = fa.actor_id
GROUP BY a.actor_id;
----
1 penelope guiness 6
2 jack nicholson 3
3 angelina jolie 3
4 tom hanks 1

onlyif bug
query ITTR rowsort
SELECT a.actor_id, a.first_name, a.last_name, SUM(f.replacement_cost)
FROM actor a
INNER JOIN film_actor fa ON a.actor_id = fa.actor_id
INNER JOIN film f ON fa.film_id = f.film_id
GROUP BY a.actor_id
----
1 penelope guiness 149.94
2 jack nicholson 63.97
3 angelina jolie 59.97
4 tom hanks 19.99

query TT rowsort
SELECT first_name, last_name FROM actor
INNER JOIN film_actor ON actor.actor_id = film_actor.actor_id
INNER JOIN film ON film_actor.film_id = film.film_id
WHERE film.title LIKE '%Red%';
----
penelope guiness
penelope guiness


# port from sqlite
statement ok
CREATE TABLE t1(a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER)

statement ok
INSERT INTO t1(e,c,b,d,a) VALUES(103,102,100,101,104)

statement ok
INSERT INTO t1(a,c,d,e,b) VALUES(107,106,108,109,105)

statement ok
INSERT INTO t1(e,d,b,a,c) VALUES(110,114,112,111,113)

statement ok
INSERT INTO t1(d,c,e,a,b) VALUES(116,119,117,115,118)

statement ok
INSERT INTO t1(c,d,b,e,a) VALUES(123,122,124,120,121)

statement ok
INSERT INTO t1(a,d,b,e,c) VALUES(127,128,129,126,125)

statement ok
INSERT INTO t1(e,c,a,d,b) VALUES(132,134,131,133,130)

statement ok
INSERT INTO t1(a,d,b,e,c) VALUES(138,136,139,135,137)

statement ok
INSERT INTO t1(e,c,d,a,b) VALUES(144,141,140,142,143)

statement ok
INSERT INTO t1(b,a,e,d,c) VALUES(145,149,146,148,147)

statement ok
INSERT INTO t1(b,c,a,d,e) VALUES(151,150,153,154,152)

statement ok
INSERT INTO t1(c,e,a,d,b) VALUES(155,157,159,156,158)

statement ok
INSERT INTO t1(c,b,a,d,e) VALUES(161,160,163,164,162)

statement ok
INSERT INTO t1(b,d,a,e,c) VALUES(167,169,168,165,166)

statement ok
INSERT INTO t1(d,b,c,e,a) VALUES(171,170,172,173,174)

statement ok
INSERT INTO t1(e,c,a,d,b) VALUES(177,176,179,178,175)

statement ok
INSERT INTO t1(b,e,a,d,c) VALUES(181,180,182,183,184)

statement ok
INSERT INTO t1(c,a,b,e,d) VALUES(187,188,186,189,185)

statement ok
INSERT INTO t1(d,b,c,e,a) VALUES(190,194,193,192,191)

statement ok
INSERT INTO t1(a,e,b,d,c) VALUES(199,197,198,196,195)

statement ok
INSERT INTO t1(b,c,d,a,e) VALUES(200,202,203,201,204)

statement ok
INSERT INTO t1(c,e,a,b,d) VALUES(208,209,205,206,207)

statement ok
INSERT INTO t1(c,e,a,d,b) VALUES(214,210,213,212,211)

statement ok
INSERT INTO t1(b,c,a,d,e) VALUES(218,215,216,217,219)

statement ok
INSERT INTO t1(b,e,d,a,c) VALUES(223,221,222,220,224)

statement ok
INSERT INTO t1(d,e,b,a,c) VALUES(226,227,228,229,225)

statement ok
INSERT INTO t1(a,c,b,e,d) VALUES(234,231,232,230,233)

statement ok
INSERT INTO t1(e,b,a,c,d) VALUES(237,236,239,235,238)

statement ok
INSERT INTO t1(e,c,b,a,d) VALUES(242,244,240,243,241)

statement ok
INSERT INTO t1(e,d,c,b,a) VALUES(246,248,247,249,245)

# cannot apply Div to Int and Int
onlyif bug
query II nosort
SELECT a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5
  FROM t1
----
1529 102
1612 107
1680 112
1757 117
1826 122
1902 127
1985 132
2046 137
2131 142
2202 147
2281 152
2349 157
2432 162
2501 167
2579 172
2654 177
2728 182
2806 187
2878 192
2949 197
3039 202
3114 207
3175 212
3260 217
3331 222
3399 227
3473 232
3553 237
3629 242
3706 247

# Invalid expression
onlyif bug
query I nosort
SELECT
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (e>a AND e<b)
    OR (c<=d-2 OR c>=d+2)
    OR e+d BETWEEN a+b-10 AND c+130
----
1529
1612
1680
1757
1826
1902
2281
2432
2501
2654
2806
2878
3175
3260
3331
3473
3553
3629
3706

onlyif bug
query IIIIIII rowsort
SELECT a+b*2,
       a+b*2+c*3+d*4+e*5,
       a-b,
       abs(b-c),
       c,
       b,
       e
  FROM t1
 WHERE d>e
----
335 1680 -1 1 113 112 110
369 1826 -3 1 123 124 120
385 1902 -2 4 125 129 126
391 1985 1 4 134 130 132
416 2046 -1 2 137 139 135
439 2202 4 2 147 145 146
455 2281 2 1 150 151 152
483 2432 3 1 161 160 162
502 2501 1 1 166 167 165
529 2654 4 1 176 175 177
544 2728 1 3 184 181 180
635 3175 2 3 214 211 210
666 3331 -3 1 224 223 221
698 3473 2 1 231 232 230
711 3553 3 1 235 236 237
743 3706 -4 2 247 249 246
